const { Client, MessageEmbed, MessageFlags } = require('discord.js');
const config = require('./config');
const Youtube = require("simple-youtube-api");
const youtube = new Youtube(config.youtube);
const keepAlive = require("./server.js");
const version = config.version;
const prefix = config.prefix;
const fs = require("fs");
const code = require("unescape");
const ytdl = require("ytdl-core");
const users = [];
const bot = new Client({
  presence: {
    status: 'online',
    activity: {
      name: `${prefix}Î™ÖÎ†πÏñ¥`,
      type: 'LISTENING'
    }
  }
});
//setup functions
function search(value="", index=3){
    return new Promise(resolve => {
        youtube.searchVideos(value, index)
    .then(youtube_results => {
        resolve(youtube_results);
    }).catch((e) => console.log(e));
});
}
function loop(connection, url){
  connection.play(ytdl(url, { filter: "audioonly", quality: 'highestaudio' }))
  .on("finish", () => {
    loop(connection,url);
  });
}
bot.on('ready', () => {
    console.log("Sonnet is running");
});
bot.on("guildCreate", (guild) => {
    const welcomeEmbed = new MessageEmbed()
    .setColor("F44444")
    .setTitle("ÏïàÎÖïÌïòÏÑ∏Ïöî ÏÜåÎÑ§Ìä∏ÏûÖÎãàÎã§")
    .setDescription(`ÎèÑÏõÄÎßê: ${prefix}Î™ÖÎ†πÏñ¥`);
    guild.systemChannel.send(welcomeEmbed);
});
bot.on('message', async message => {
  try{
  const msg = message.content;
  if(msg == "sonnet" || msg == prefix|| msg == "Sonnet" || msg == "SONNET" || msg == "ÏÜåÎÑ∑"){
      const Embed = new MessageEmbed()
      .setColor("#F44444")
      .setTitle(`ÏïàÎÖïÌïòÏÑ∏Ïöî! ${message.author.username.length >= 7?message.author.username.slice(0,7)+"...":message.author.username}Îãò, SonnetÏûÖÎãàÎã§`)
      .setDescription(`Î™ÖÎ†πÏñ¥: ${prefix}Î™ÖÎ†πÏñ¥`)
      .setFooter("Made By SepJ")
      .setAuthor("Sonnet", bot.user.displayAvatarURL(),"https://sepsite.kro.kr");
      message.channel.send(Embed);
  }
	  if (message.content.startsWith(prefix)) {
    let command = message.content.slice(prefix.length).includes(" ")?message.content.slice(prefix.length).replace(/ /g,""):message.content.slice(prefix.length);
    //startsWith cmd
    switch (true){
    case msg.startsWith(`${prefix}Ïû¨ÏÉù `):
      let title = msg.slice(`${prefix}Ïû¨ÏÉù `.length);
      if(message.member.voice.channel){
      if(isNaN(title)){
        //if title is string or etc
        if(users.find(e => e.channel === message.member.voice.channelID)){
        search(title,3)
        .then(results => {
        var new_user = {
          query: title,
          list: results
        }
        let searchEmbed = new MessageEmbed()
        .setTitle(title.length>10?title.substring(0,10)+"...":title+"Ïóê ÎåÄÌïú Í≤ÄÏÉâÍ≤∞Í≥ºÏûÖÎãàÎã§")
        .setColor("F44444")
        .setFooter("Made By SepJ");
        Object.assign(users.find(e => e.channel === message.member.voice.channelID), new_user);
        for(var i = 0;i < 3;i++){
          searchEmbed.addField("**["+(i+1)+"]**  : " + code(results[i].title), results[i].description.length>30?results[i].description.substring(0,30)+"...":results[i].description, i%2==0?true:false);
        }
        message.channel.send(searchEmbed);
      }).catch((e) => console.log(e));
      }//if exists users
      else{
        message.channel.send("**Î®ºÏ†Ä ÏÜåÎÑ§Ìä∏Ï∞∏Í∞ÄÎ°ú SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏùÑ Îì§Ïñ¥Í∞ÄÍ≤å Ìï¥Ï£ºÏÑ∏Ïöî**");
      }
      }else{
        //if title is number
        if(users.find(e => e.channel === message.member.voice.channelID)){
          var user = users.find(e => e.channel === message.member.voice.channelID);
          let musicResult = user.list[Number(title)-1];
          let url = musicResult.url;
          user.url = url;
          user.dispatcher = user.connection.play(ytdl(url, { filter: "audioonly", quality: 'highestaudio' }))
          .on("finish", () => {
            loop(user.connection, url);
          });
          user.dispatcher.setVolume(0.5);
          let musicEmbed = new MessageEmbed()
          .setColor("F44444")
          .setTitle(musicResult.title)
          .setThumbnail(musicResult.thumbnails.high.url)
          .setURL(musicResult.url)
          .setDescription(musicResult.description.length>30?musicResult.description.substring(0,30)+"...":musicResult.description)
          .setTimestamp(musicResult.publishedAt);
          message.channel.send(musicEmbed)
            .then(async react_msg => {
              await react_msg.react("üéµ");
              await react_msg.react("üéß");
              await react_msg.react("üîä");
            });
        }else{
          message.channel.send("**Î®ºÏ†Ä ÏÜåÎÑ§Ìä∏Ï∞∏Í∞ÄÎ°ú SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏùÑ Îì§Ïñ¥Í∞ÄÍ≤å Ìï¥Ï£ºÏÑ∏Ïöî**");
        }
      }
    }else{
      message.channel.send("**Î®ºÏ†Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Îì§Ïñ¥Í∞ÄÏ£ºÏÑ∏Ïöî**");
    }
    break;
  }
    switch (command) {
      case "ÏùåÏïÖ":
      case "ÎÖ∏Îûò":
      case "Î™ÖÎ†πÏñ¥":
      case "ÎèÑÏõÄÎßê":
      case "ÎèÑÏõÄ":
          const cmdEmbed = new MessageEmbed()
            .addFields({
                name:`>>> **${prefix}Ï∞∏Í∞Ä**`,value: `=> ÏùåÏÑ±Ï±ÑÎÑê Ï∞∏Í∞Ä`, inline:false
            },{
                name:`>>> **${prefix}Ìá¥Ïû•**`, value:"=> ÏùåÏÑ±Ï±ÑÎÑê Ìá¥Ïû•", inline:true
            },{
                name:`>>> **${prefix}Ïû¨ÏÉù (ÏùåÏïÖ)**` , value:"=> ÏùåÏïÖ Ïû¨ÏÉù", inline:false
            })
            .addFields({
                name : `>>> **${prefix}Ï†ïÏßÄ**`, value: "=> ÏùåÏïÖ ÏùºÏãúÏ†ïÏßÄ", inline:true
            },{
                name: `>>> **${prefix}ÏãúÏûë**`, value:"=> ÏùåÏïÖ ÏùºÏãúÏ†ïÏßÄ Ìï¥Ï†ú", inline:true
            })
            .setColor("F44444")
            .setTitle("SonnetÏùò ÏùåÏïÖ Î™ÖÎ†πÏñ¥")
            .setFooter("Î≤ÑÏ†Ñ : "+version)
            .setAuthor(`SepJ#0359`, "https://imgur.com/a/HkDzbOC.jpg");
            message.channel.send(cmdEmbed);
      break;
      case "Ï∞∏Í∞Ä":
      case "Îì§Ïñ¥ÏôÄ":
      case "Ï∞∏Ïó¨":
        if(message.member.voice.channel){
          if(users.find(e => e.channel === message.member.voice.channelID)){
            var user_index = users.findIndex(e => e.channel === message.member.voice.channelID);
            users.splice(user_index,1);
            var user = {
              channel: message.member.voice.channelID,
              connection: await message.member.voice.channel.join()
            };
            users.push(user);
            user.connection.setSpeaking("SPEAKING");
            message.channel.send(`SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Ï∞∏Í∞ÄÌïòÏòÄÏäµÎãàÎã§!\n=> Ïù¥Ï†ú ÏÜåÎÑ§Ìä∏Ïû¨ÏÉù (Ï†úÎ™©)ÏúºÎ°ú ÎÖ∏ÎûòÎ•º Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî!`);
          }else{
          var user = {
            channel: message.member.voice.channelID,
            connection: await message.member.voice.channel.join()
          };
          users.push(user);
          user.connection.setSpeaking("SPEAKING");
          message.channel.send(`SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Ï∞∏Í∞ÄÌïòÏòÄÏäµÎãàÎã§!\n=> Ïù¥Ï†ú ÏÜåÎÑ§Ìä∏Ïû¨ÏÉù (Ï†úÎ™©)ÏúºÎ°ú ÎÖ∏ÎûòÎ•º Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî!`);
        }
        }else{
          message.channel.send("**Î®ºÏ†Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Îì§Ïñ¥Í∞ÄÏ£ºÏÑ∏Ïöî**");
        }
        break;
      case "ÏãúÏûë":
      case "Ïû¨ÏãúÏûë":
      case "Í≥ÑÏÜç":
      case "Í≥ÑÏÜçÏãúÏûë":
        if(!message.member.voice.channel){
            message.channel.send("**Î®ºÏ†Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Îì§Ïñ¥Í∞ÄÏ£ºÏÑ∏Ïöî**");
        }else{
          var user = users.find(e => e.channel === message.member.voice.channelID);
          if(user == null){
            message.channel.send("**Î®ºÏ†Ä ÏÜåÎÑ§Ìä∏Ï∞∏Í∞ÄÎ°ú SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏùÑ Îì§Ïñ¥Í∞ÄÍ≤å Ìï¥Ï£ºÏÑ∏Ïöî**");
          }else{
            if(!user.dispatcher){
              message.channel.send("**ÏïÑÏßÅ Ïû¨ÏÉùÏùÑ ÌïòÏßÄ ÏïäÏïòÏäµÎãàÎã§**");
            }else{
              if(!user.dispatcher.paused){
                message.channel.send("**ÎÖ∏ÎûòÍ∞Ä Ï†ïÏßÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§**");
              }else{
                user.dispatcher.resume();
                message.channel.send("ÏùåÏïÖÏû¨ÏÉùÏùÑ Í≥ÑÏÜç ÏãúÏûëÌï©ÎãàÎã§\n\nÌòÑÏû¨ ÏÉÅÌÉú : Ïû¨ÏÉù");
              }
            }
          }
        }
        break;
      case "Ï†ïÏßÄ":
      case "Ï§ëÏßÄ":
      case "Î©àÏ∂∞":
      case "Í∑∏Îßå":
        if(!message.member.voice.channel){
          message.channel.send("**Î®ºÏ†Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Îì§Ïñ¥Í∞ÄÏ£ºÏÑ∏Ïöî**");
      }else{
        var user = users.find(e => e.channel === message.member.voice.channelID);
        if(user == null){
          message.channel.send("**Î®ºÏ†Ä ÏÜåÎÑ§Ìä∏Ï∞∏Í∞ÄÎ°ú SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏùÑ Îì§Ïñ¥Í∞ÄÍ≤å Ìï¥Ï£ºÏÑ∏Ïöî**");
        }else{
          if(!user.dispatcher){
            message.channel.send("**ÏïÑÏßÅ Ïû¨ÏÉùÏùÑ ÌïòÏßÄ ÏïäÏïòÏäµÎãàÎã§**");
          }else{
            if(user.dispatcher.paused){
              message.channel.send("**ÎÖ∏ÎûòÍ∞Ä Ïù¥ÎØ∏ Ï†ïÏßÄÎêòÏñ¥ÏûàÏäµÎãàÎã§**");
            }else{
              user.dispatcher.pause();
              message.channel.send("ÏùåÏïÖÏû¨ÏÉùÏù¥ Ï†ïÏßÄÎêòÏóàÏäµÎãàÎã§\n\nÌòÑÏû¨ ÏÉÅÌÉú : Ï†ïÏßÄ");
            }
          }
        }
      }
    break;
      case "Ìá¥Ïû•":
      case "ÎÇòÍ∞Ä":
      case "ÎÇòÍ∞ÄÍ∏∞":
        if(!message.member.voice.channel){
          message.channel.send("**Î®ºÏ†Ä ÏùåÏÑ±Ï±ÑÎÑêÏóê Îì§Ïñ¥Í∞ÄÏ£ºÏÑ∏Ïöî**");
        }else{
          var user = users.find(e => e.channel === message.member.voice.channelID);
          if(!user){
            message.channel.send("**Î®ºÏ†Ä ÏÜåÎÑ§Ìä∏Ï∞∏Í∞ÄÎ°ú SonnetÍ∞Ä ÏùåÏÑ±Ï±ÑÎÑêÏùÑ Îì§Ïñ¥Í∞ÄÍ≤å Ìï¥Ï£ºÏÑ∏Ïöî**");
          }else{
            var user_index = users.findIndex(e => e.channel === message.member.voice.channelID)
            users.splice(user_index,1);
            message.member.voice.channel.leave();
            message.channel.send("Ïù¥ ÏùåÏÑ±Ï±ÑÎÑêÏùÑ ÎÇòÍ∞îÏäµÎãàÎã§\n=> Îã§ÏùåÏóê Îòê Î¥êÏöî!")
            .then(react_msg => react_msg.react("üñê"));
          }
        }
      break;
    } //switch
  }
}catch(e){
  console.log(e);
}
});
keepAlive();
bot.login(config.token);